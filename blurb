#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const args = process.argv.slice(2);
if (args.length === 0) {
  console.error('usage: ./blurb <slug or title>');
  process.exit(1);
}

const rawInput = args.join(' ').trim();
if (!rawInput) {
  console.error('slug or title cannot be empty');
  process.exit(1);
}

const slug = rawInput
  .toLowerCase()
  .replace(/[^a-z0-9]+/g, '-')
  .replace(/^-+|-+$/g, '');

if (!slug) {
  console.error('could not derive a slug from input');
  process.exit(1);
}

const title = rawInput
  .split(/\s+/)
  .filter(Boolean)
  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
  .join(' ');

const today = new Date().toISOString().slice(0, 10);
const root = path.resolve(__dirname);
const templatePath = path.join(root, 'src', 'templates', 'blurb', 'index.blurb.css');

if (!fs.existsSync(templatePath)) {
  console.error('missing blurb template at src/templates/blurb/index.blurb.css');
  process.exit(1);
}

const outputPath = path.join(root, 'blurbs', `${slug}.blurb.css`);
if (fs.existsSync(outputPath)) {
  console.error(`blurb file already exists: ${path.relative(root, outputPath)}`);
  process.exit(1);
}

let css = fs.readFileSync(templatePath, 'utf8');
css = css.replace(/{{DATE}}/g, today);
css = css.replace(/{{TITLE}}/g, title);
css = css.replace(/{{SLUG}}/g, slug);

fs.writeFileSync(outputPath, css);
console.log(`created ${path.relative(root, outputPath)}`);
console.log('remember to wire it up in blurbs.ejs and stylesheets');
